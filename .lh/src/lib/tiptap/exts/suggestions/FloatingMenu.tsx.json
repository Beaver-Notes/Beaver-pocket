{
    "sourceFile": "src/lib/tiptap/exts/suggestions/FloatingMenu.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1732521234510,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1732521240216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -319,11 +319,8 @@\n           <div className=\"text-left\">\n             <h3 className=\"font-medium text-neutral-800 dark:text-[color:var(--selected-dark-text)]\">\n               {item.label}\n             </h3>\n-            <p className=\"text-sm text-neutral-500 dark:text-[color:var(--selected-dark-text)]\">\n-              {item.description}\n-            </p>\n           </div>\n         </button>\n       ),\n     })),\n"
                }
            ],
            "date": 1732521234510,
            "name": "Commit-0",
            "content": "// SlashMenu.tsx\nimport React, { useEffect, useState } from \"react\";\nimport ImageUploadComponent from \"../../../../components/Editor/ImageUpload\"; // Adjust the path\nimport FileUploadComponent from \"../../../../components/Editor/FileUpload\"; // Adjust the path\nimport VideoUploadComponent from \"../../../../components/Editor/VideoUpload\"; // Adjust the path\nimport icons from \"../../../remixicon-react\";\n\ninterface SlashMenuProps {\n  noteId: string;\n  editor: any;\n  query: string;\n}\nconst SlashMenu: React.FC<SlashMenuProps> = ({ noteId, editor, query }) => {\n  useEffect(() => {\n    const loadTranslations = async () => {\n      const selectedLanguage = localStorage.getItem(\"selectedLanguage\") || \"en\";\n      try {\n        const translationModule = await import(\n          `../../../../assets/locales/${selectedLanguage}.json`\n        );\n        setTranslations((prev) => ({ ...prev, ...translationModule.default }));\n      } catch (error) {\n        console.error(\"Error loading translations:\", error);\n      }\n    };\n\n    loadTranslations();\n  }, []);\n\n  const handlefileUpload = (fileUrl: string, fileName: string) => {\n    editor?.chain().setFileEmbed(fileUrl, fileName).run();\n  };\n\n  const handlevideoUpload = (fileUrl: string) => {\n    editor?.chain().setVideo(fileUrl).run();\n  };\n\n  const handleImageUpload = (imageUrl: string) => {\n    editor?.chain().setImage({ src: imageUrl }).run();\n  };\n\n  const handleAddIframe = () => {\n    const videoUrl = prompt(`${translations.editor.embedUrl}`);\n    if (!videoUrl || videoUrl.trim() === \"\") {\n      return;\n    }\n\n    let formattedUrl = videoUrl.trim();\n    if (formattedUrl.includes(\"youtube.com/watch?v=\")) {\n      let videoId = formattedUrl.split(\"v=\")[1];\n      const ampersandPosition = videoId.indexOf(\"&\");\n      if (ampersandPosition !== -1) {\n        videoId = videoId.substring(0, ampersandPosition);\n      }\n      formattedUrl = `https://www.youtube.com/embed/${videoId}`;\n    } else if (formattedUrl.includes(\"youtu.be/\")) {\n      let videoId = formattedUrl.split(\"youtu.be/\")[1];\n      const ampersandPosition = videoId.indexOf(\"?\");\n      if (ampersandPosition !== -1) {\n        videoId = videoId.substring(0, ampersandPosition);\n      }\n      formattedUrl = `https://www.youtube.com/embed/${videoId}`;\n    }\n\n    editor?.chain().focus().setIframe({ src: formattedUrl }).run();\n  };\n\n  const [translations, setTranslations] = useState({\n    editor: {\n      embedUrl: \"editorembedUrl\",\n    },\n    menuItems: {\n      fileLabel: \"menuItems.fileLabel\",\n      imageLabel: \"menuItems.imageLabel\",\n      videoLabel: \"menuItems.videoLabel\",\n      paragraphLabel: \"menuItems.paragraphLabel\",\n      heading1Label: \"menuItems.heading1Label\",\n      heading2Label: \"menuItems.heading2Label\",\n      heading3Label: \"menuItems.heading3Label\",\n      heading4Label: \"menuItems.heading4Label\",\n      heading5Label: \"menuItems.heading5Label\",\n      heading6Label: \"menuItems.heading6Label\",\n      quoteLabel: \"menuItems.quoteLabel\",\n      codeLabel: \"menuItems.codeLabel\",\n      tableLabel: \"menuItems.tableLabel\",\n      bulletListLabel: \"menuItems.bulletListLabel\",\n      orderedListLabel: \"menuItems.orderedListLabel\",\n      checklistLabel: \"menuItems.checklistLabel\",\n      blackCalloutLabel: \"menuItems.blackCalloutLabel\",\n      blueCalloutLabel: \"menuItems.blueCalloutLabel\",\n      greenCalloutLabel: \"menuItems.greenCalloutLabel\",\n      purpleCalloutLabel: \"menuItems.purpleCalloutLabel\",\n      redCalloutLabel: \"menuItems.redCalloutLabel\",\n      yellowCalloutLabel: \"menuItems.yellowCalloutLabel\",\n      mathBlockLabel: \"menuItems.mathBlockLabel\",\n      mermaidBlockLabel: \"menuItems.mermaidBlockLabel\",\n      embedLabel: \"menuItems.embedLabel\",\n      drawingBlockLabel: \"menuItems.drawingBlockLabel\",\n    },\n  });\n\n  const menuItems = [\n    {\n      icon: icons.ParagraphIcon,\n      label: translations.menuItems.paragraphLabel,\n      action: () => editor.chain().focus().setParagraph().run(),\n    },\n    {\n      icon: icons.Heading1Icon,\n      label: translations.menuItems.heading1Label,\n      action: () => editor.chain().focus().toggleHeading({ level: 1 }).run(),\n    },\n    {\n      icon: icons.Heading2Icon,\n      label: translations.menuItems.heading2Label,\n      action: () => editor.chain().focus().toggleHeading({ level: 2 }).run(),\n    },\n    {\n      icon: icons.Heading3Icon,\n      label: translations.menuItems.heading3Label,\n      action: () => editor.chain().focus().toggleHeading({ level: 3 }).run(),\n    },\n    {\n      icon: icons.Heading4Icon,\n      label: translations.menuItems.heading4Label,\n      action: () => editor.chain().focus().toggleHeading({ level: 4 }).run(),\n    },\n    {\n      icon: icons.Heading5Icon,\n      label: translations.menuItems.heading5Label,\n      action: () => editor.chain().focus().toggleHeading({ level: 5 }).run(),\n    },\n    {\n      icon: icons.Heading6Icon,\n      label: translations.menuItems.heading6Label,\n      action: () => editor.chain().focus().toggleHeading({ level: 6 }).run(),\n    },\n    {\n      icon: icons.DoubleQuotesLIcon,\n      label: translations.menuItems.quoteLabel,\n      action: () => editor.chain().focus().toggleBlockquote().run(),\n    },\n    {\n      icon: icons.CodeBoxLineIcon,\n      label: translations.menuItems.codeLabel,\n      action: () => editor.chain().focus().toggleCodeBlock().run(),\n    },\n    {\n      icon: icons.Table2Icon,\n      label: translations.menuItems.tableLabel,\n      action: () =>\n        editor?.commands.insertTable({\n          rows: 3,\n          cols: 3,\n          withHeaderRow: true,\n        }),\n    },\n    {\n      icon: icons.ListUnorderedIcon,\n      label: translations.menuItems.bulletListLabel,\n      action: () => editor.chain().focus().toggleBulletList().run(),\n    },\n    {\n      icon: icons.ListOrderedIcon,\n      label: translations.menuItems.orderedListLabel,\n      action: () => editor?.chain().focus().toggleOrderedList().run(),\n    },\n    {\n      icon: icons.ListCheck2Icon,\n      label: translations.menuItems.checklistLabel,\n      action: () => editor?.chain().focus().toggleTaskList().run(),\n    },\n    {\n      icon: icons.SingleQuotesLIcon,\n      label: translations.menuItems.blackCalloutLabel,\n      className: \"dark:text-neutral-400\",\n      //@ts-ignore\n      action: () => editor?.chain().focus().setBlackCallout().run(),\n    },\n    {\n      icon: icons.SingleQuotesLIcon,\n      label: translations.menuItems.blueCalloutLabel,\n      className: \"text-blue-500 dark:text-blue-500\",\n      //@ts-ignore\n      action: () => editor?.chain().focus().setBlueCallout().run(),\n    },\n    {\n      icon: icons.SingleQuotesLIcon,\n      label: translations.menuItems.greenCalloutLabel,\n      className: \"text-green-600 dark:text-green-600\",\n      //@ts-ignore\n      action: () => editor?.chain().focus().setGreenCallout().run(),\n    },\n    {\n      icon: icons.SingleQuotesLIcon,\n      label: translations.menuItems.purpleCalloutLabel,\n      className: \"text-purple-500 dark:text-purple-500\",\n      //@ts-ignore\n      action: () => editor?.chain().focus().setPurpleCallout().run(),\n    },\n    {\n      icon: icons.SingleQuotesLIcon,\n      label: translations.menuItems.redCalloutLabel,\n\n      className: \"text-red-500 dark:text-red-500\",\n      //@ts-ignore\n      action: () => editor?.chain().focus().setRedCallout().run(),\n    },\n    {\n      icon: icons.SingleQuotesLIcon,\n      label: translations.menuItems.yellowCalloutLabel,\n\n      className: \"text-yellow-500 dark:text-yellow-500\",\n      //@ts-ignore\n\n      action: () => editor?.chain().focus().setYellowCallout().run(),\n    },\n    {\n      icon: icons.CalculatorLineIcon,\n      label: translations.menuItems.mathBlockLabel,\n\n      //@ts-ignore\n      action: () => editor?.chain().focus().setMathBlock().run(),\n    },\n    {\n      icon: icons.PieChart2LineIcon,\n      label: translations.menuItems.mermaidBlockLabel,\n\n      //@ts-ignore\n      action: () => editor?.chain().focus().setMermaidDiagram().run(),\n    },\n    {\n      icon: icons.PagesLineIcon,\n      label: translations.menuItems.embedLabel,\n\n      action: handleAddIframe,\n    },\n    {\n      icon: icons.BrushLineIcon,\n      label: translations.menuItems.drawingBlockLabel,\n\n      //@ts-ignore\n      action: () => editor?.chain().focus().insertPaper().run(),\n    },\n  ];\n\n  // Filter menu items by query\n  const filteredMenuItems = menuItems.filter((item) =>\n    item.label.toLowerCase().includes(query.toLowerCase())\n  );\n\n  // Check if the query matches partial words for the upload components\n  const showImageUpload = translations.menuItems.imageLabel\n    .toLowerCase()\n    .includes(query.toLowerCase());\n  const showFileUpload = translations.menuItems.fileLabel\n    .toLowerCase()\n    .includes(query.toLowerCase());\n  const showVideoUpload = translations.menuItems.videoLabel\n    .toLowerCase()\n    .includes(query.toLowerCase());\n\n  // Prepare the list of upload components\n  const uploadComponents = [];\n  if (showImageUpload) {\n    uploadComponents.push({\n      component: (\n        <ImageUploadComponent\n          key=\"imageUpload\"\n          onImageUpload={handleImageUpload}\n          noteId={noteId}\n          menu={true}\n          translations={translations}\n        />\n      ),\n    });\n  }\n  if (showFileUpload) {\n    uploadComponents.push({\n      component: (\n        <FileUploadComponent\n          key=\"fileUpload\"\n          onFileUpload={handlefileUpload}\n          noteId={noteId}\n          menu={true}\n          translations={translations}\n        />\n      ),\n    });\n  }\n  if (showVideoUpload) {\n    uploadComponents.push({\n      component: (\n        <VideoUploadComponent\n          key=\"videoUpload\"\n          onVideoUpload={handlevideoUpload}\n          noteId={noteId}\n          menu={true}\n          translations={translations}\n        />\n      ),\n    });\n  }\n\n  // Combine filtered menu items and upload components, respecting the 5-item limit\n  const combinedItems = [\n    ...filteredMenuItems.map((item, index) => ({\n      component: (\n        <button\n          key={index}\n          onClick={item.action}\n          className=\"flex items-center p-2 rounded-lg text-black dark:text-[color:var(--selected-dark-text)] cursor-pointer hover:bg-gray-100 dark:hover:bg-[#353333] transition duration-200\"\n        >\n          <item.icon\n            className={`text-black dark:text-[color:var(--selected-dark-text)] text-xl w-8 h-8 mr-2 ${\n              item.className || \"\"\n            }`}\n          />\n          <div className=\"text-left\">\n            <h3 className=\"font-medium text-neutral-800 dark:text-[color:var(--selected-dark-text)]\">\n              {item.label}\n            </h3>\n            <p className=\"text-sm text-neutral-500 dark:text-[color:var(--selected-dark-text)]\">\n              {item.description}\n            </p>\n          </div>\n        </button>\n      ),\n    })),\n    ...uploadComponents,\n  ].slice(0, 5);\n\n  return (\n    <div className=\"z-50 fixed bg-white dark:bg-[#232222] rounded-lg shadow-lg border-2 shadow dark:border-neutral-600 p-4\">\n      {combinedItems.map((item) => item.component)}\n    </div>\n  );\n};\n\nexport default SlashMenu;\n"
        }
    ]
}