{
    "sourceFile": "src/components/Editor/Find.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 8,
            "patches": [
                {
                    "date": 1731916486166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1731916503051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,24 +74,14 @@\n   }, []);\n \n   const handleClose = () => {\n     setShowFind(false);\n-    setSearchTerm(\"\");\n-    setReplaceTerm(\"\");\n-    editor?.chain().setSearchTerm(\"\").resetIndex().clearHighlights().run();\n+    setSearchTerm('');  // Clear the search term when closing\n+    editor?.chain().resetIndex().run();  // Reset the search index and highlights\n   };\n   \n   useEffect(() => {\n     if (searchTerm) {\n-      editor?.chain().setSearchTerm(searchTerm).resetIndex().run();\n-    } else {\n-      editor?.chain().resetIndex().clearHighlights().run();\n-    }\n-  }, [searchTerm, editor]);\n-  \n-  \n-  useEffect(() => {\n-    if (searchTerm) {\n       editor?.chain()\n         .setSearchTerm(searchTerm)\n         .resetIndex()  // Reset any previous search index before starting a new search\n         .run();\n"
                },
                {
                    "date": 1731916514619,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,12 +74,14 @@\n   }, []);\n \n   const handleClose = () => {\n     setShowFind(false);\n-    setSearchTerm('');  // Clear the search term when closing\n-    editor?.chain().resetIndex().run();  // Reset the search index and highlights\n+    setSearchTerm(\"\");  // Clear the search term\n+    setReplaceTerm(\"\"); // Clear the replace term\n+    editor?.chain().setSearchTerm(\"\").resetIndex().clearHighlights().run(); // Clear highlights\n   };\n   \n+  \n   useEffect(() => {\n     if (searchTerm) {\n       editor?.chain()\n         .setSearchTerm(searchTerm)\n"
                },
                {
                    "date": 1731916573952,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,11 +77,11 @@\n     setShowFind(false);\n     setSearchTerm(\"\");  // Clear the search term\n     setReplaceTerm(\"\"); // Clear the replace term\n     editor?.chain().setSearchTerm(\"\").resetIndex().clearHighlights().run(); // Clear highlights\n-  };\n+    props.editor.commands.clearSearch();\n+  };  \n   \n-  \n   useEffect(() => {\n     if (searchTerm) {\n       editor?.chain()\n         .setSearchTerm(searchTerm)\n"
                },
                {
                    "date": 1731916580840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n     setShowFind(false);\n     setSearchTerm(\"\");  // Clear the search term\n     setReplaceTerm(\"\"); // Clear the replace term\n     editor?.chain().setSearchTerm(\"\").resetIndex().clearHighlights().run(); // Clear highlights\n-    props.editor.commands.clearSearch();\n+    editor?editor.commands.clearSearch();\n   };  \n   \n   useEffect(() => {\n     if (searchTerm) {\n"
                },
                {
                    "date": 1731916591669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,9 @@\n     setShowFind(false);\n     setSearchTerm(\"\");  // Clear the search term\n     setReplaceTerm(\"\"); // Clear the replace term\n     editor?.chain().setSearchTerm(\"\").resetIndex().clearHighlights().run(); // Clear highlights\n-    editor?editor.commands.clearSearch();\n+    editor.commands.clearSearch();\n   };  \n   \n   useEffect(() => {\n     if (searchTerm) {\n"
                },
                {
                    "date": 1731916635447,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n   const handleClose = () => {\n     setShowFind(false);\n     setSearchTerm(\"\");  // Clear the search term\n     setReplaceTerm(\"\"); // Clear the replace term\n-    editor?.chain().setSearchTerm(\"\").resetIndex().clearHighlights().run(); // Clear highlights\n+    editor?.chain().setSearchTerm(\"\").resetIndex().clearSearch().run(); // Clear highlights\n     editor.commands.clearSearch();\n   };  \n   \n   useEffect(() => {\n"
                },
                {
                    "date": 1731916644864,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,10 +76,9 @@\n   const handleClose = () => {\n     setShowFind(false);\n     setSearchTerm(\"\");  // Clear the search term\n     setReplaceTerm(\"\"); // Clear the replace term\n-    editor?.chain().setSearchTerm(\"\").resetIndex().clearSearch().run(); // Clear highlights\n-    editor.commands.clearSearch();\n+    editor?.chain().setSearchTerm(\"\").resetIndex().clea().run(); // Clear highlights\n   };  \n   \n   useEffect(() => {\n     if (searchTerm) {\n"
                },
                {
                    "date": 1731916832257,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,8 +77,9 @@\n     setShowFind(false);\n     setSearchTerm(\"\");  // Clear the search term\n     setReplaceTerm(\"\"); // Clear the replace term\n     editor?.chain().setSearchTerm(\"\").resetIndex().clea().run(); // Clear highlights\n+    editor.commands.clearSearch();\n   };  \n   \n   useEffect(() => {\n     if (searchTerm) {\n"
                }
            ],
            "date": 1731916486166,
            "name": "Commit-0",
            "content": "import React, { useEffect, useRef, useState } from \"react\";\nimport icons from \"../../lib/remixicon-react\";\nimport Icons from \"../../lib/remixicon-react\";\n\ninterface FindProps {\n  editor: any;\n  setShowFind: any;\n}\n\nconst Find: React.FC<FindProps> = ({ editor, setShowFind }) => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [replaceTerm, setReplaceTerm] = useState(\"\");\n  const searchInputRef = useRef<HTMLInputElement>(null);\n\n  console.log(searchTerm);\n  console.log(searchInputRef);\n\n  const handleSearch = () => {\n    if (searchTerm) {\n      editor\n        ?.chain()\n        .setSearchTerm(searchTerm)\n        .setReplaceTerm(replaceTerm)\n        .resetIndex()\n        .run();\n      focusEditor();\n    }\n  };\n\n  const handleReplace = () => {\n    if (searchTerm && replaceTerm) {\n      editor\n        ?.chain()\n        .setSearchTerm(searchTerm)\n        .setReplaceTerm(replaceTerm)\n        .resetIndex()\n        .replace()\n        .run();\n      focusEditor();\n    }\n  };\n\n  const focusEditor = () => {\n    editor?.commands.focus();\n  };\n\n  // Translations\n  const [translations, setTranslations] = useState({\n    editor: {\n      searchTerm: \"editor.searchTerm\",\n      replaceTerm: \"editor.replaceTerm\",\n      find: \"editor.find\",\n      replace: \"editor.replace\",\n      replaceAll: \"editor.replaceAll\",\n    },\n  });\n\n  useEffect(() => {\n    // Load translations\n    const loadTranslations = async () => {\n      const selectedLanguage = localStorage.getItem(\"selectedLanguage\") || \"en\";\n      try {\n        const translationModule = await import(\n          `../../assets/locales/${selectedLanguage}.json`\n        );\n\n        setTranslations({ ...translations, ...translationModule.default });\n      } catch (error) {\n        console.error(\"Error loading translations:\", error);\n      }\n    };\n\n    loadTranslations();\n  }, []);\n\n  const handleClose = () => {\n    setShowFind(false);\n    setSearchTerm(\"\");\n    setReplaceTerm(\"\");\n    editor?.chain().setSearchTerm(\"\").resetIndex().clearHighlights().run();\n  };\n  \n  useEffect(() => {\n    if (searchTerm) {\n      editor?.chain().setSearchTerm(searchTerm).resetIndex().run();\n    } else {\n      editor?.chain().resetIndex().clearHighlights().run();\n    }\n  }, [searchTerm, editor]);\n  \n  \n  useEffect(() => {\n    if (searchTerm) {\n      editor?.chain()\n        .setSearchTerm(searchTerm)\n        .resetIndex()  // Reset any previous search index before starting a new search\n        .run();\n    } else {\n      editor?.chain().resetIndex().run();  // If no search term, reset the index\n    }\n  }, [searchTerm, editor]);\n\n  return (\n    <div className=\"pt-4 bg-white dark:bg-[#232222] overflow-enabled h-auto w-full bg-transparent z-30 no-scrollbar\">\n      <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2 sm:gap-4 w-full\">\n        {/* Search Input and Button */}\n        <div className=\"flex items-center sm:col-span-1 w-full space-x-2\">\n          <div className=\"flex w-full px-2 items-center flex-grow bg-[#F8F8F7] dark:bg-[#2D2C2C] rounded-lg p-2 outline-none outline-amber-400 text-neutral-800\">\n            <icons.Search2LineIcon className=\"text-neutral-800 dark:text-[color:var(--selected-dark-text)] h-6 w-6 mr-2\" />\n            <input\n              className=\"text-lg text-neutral-800 bg-transparent dark:bg-transparent px-2 outline-none dark:text-[color:var(--selected-dark-text)] w-full\"\n              ref={searchInputRef}\n              type=\"text\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              placeholder={translations.editor.searchTerm || \"-\"}\n            />\n          </div>\n          <button\n            className=\"p-3 sm:hidden hover:bg-[#EAEAEA] dark:hover:bg-[#413F3F] rounded-lg text-lg bg-[#F8F8F7] dark:bg-[#353333]\"\n            onClick={handleSearch}\n          >\n            <icons.Search2LineIcon />\n          </button>\n          <button\n            className=\"p-3 sm:hidden hover:bg-[#EAEAEA] dark:hover:bg-[#413F3F] rounded-lg text-lg bg-[#F8F8F7] dark:bg-[#353333]\"\n            onClick={handleClose}\n          >\n            <Icons.CloseLineIcon\n              className={`border-none text-red-500 text-xl w-7 h-7`}\n            />\n          </button>\n        </div>\n\n        {/* Replace Input */}\n        <div className=\"hidden sm:flex items-center sm:col-span-1 w-full space-x-2\">\n          <div className=\"flex w-full px-2 items-center flex-grow bg-[#F8F8F7] dark:bg-[#2D2C2C] rounded-lg p-2 outline-none outline-amber-400 text-neutral-800\">\n            <input\n              className=\"text-lg text-neutral-800 bg-transparent dark:bg-transparent px-2 outline-none dark:text-[color:var(--selected-dark-text)] w-full\"\n              type=\"text\"\n              value={replaceTerm}\n              onChange={(e) => setReplaceTerm(e.target.value)}\n              placeholder={translations.editor.replaceTerm || \"-\"}\n            />\n          </div>\n        </div>\n\n        {/* Action Buttons */}\n        <div className=\"hidden sm:flex items-center sm:col-span-1 w-full space-x-2\">\n          <button\n            className=\"flex-grow sm:flex-grow-0 p-3 w-full sm:w-auto hover:bg-[#EAEAEA] dark:hover:bg-[#413F3F] rounded-lg text-lg bg-[#F8F8F7] dark:bg-[#353333]\"\n            onClick={handleSearch}\n          >\n            {translations.editor.find || \"-\"}\n          </button>\n          <button\n            className=\"flex-grow sm:flex-grow-0 p-3 w-full sm:w-auto rounded-lg text-lg hover:bg-[#EAEAEA] dark:hover:bg-[#413F3F] bg-[#F8F8F7] dark:bg-[#353333]\"\n            onClick={handleReplace}\n          >\n            {translations.editor.replace || \"-\"}\n          </button>\n          <button\n            className=\"flex-grow sm:flex-grow-0 p-3 w-full sm:w-auto rounded-lg text-lg hover:bg-[#EAEAEA] dark:hover:bg-[#413F3F] bg-[#F8F8F7] dark:bg-[#353333]\"\n            onClick={handleClose}\n          >\n            <Icons.CloseLineIcon\n              className={`border-none text-red-500 text-xl w-7 h-7`}\n            />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Find;\n"
        }
    ]
}