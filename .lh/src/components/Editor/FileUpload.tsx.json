{
    "sourceFile": "src/components/Editor/FileUpload.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1732521273617,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1732521280888,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,11 +111,8 @@\n                 aria-hidden=\"true\" // Hidden from screen readers\n               >\n                 {translations.menuItems?.fileLabel || \"Upload File\"} // Fallback\n               </h3>\n-              <p className=\"text-sm text-neutral-500\" aria-hidden=\"true\"> {/* Hidden from screen readers */}\n-                {translations.menuItems?.fileDescription || \"Choose a file to upload\"} // Fallback\n-              </p>\n             </div>\n           </label>\n \n           {/* Hidden File Input */}\n"
                },
                {
                    "date": 1732521568178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n           const filePath = `file-assets/${noteId}/${fileName}`;\n           try {\n             await Filesystem.writeFile({\n               path: filePath,\n-              data: fileDataUrl.split(',')[1], // Write only base64 data\n+              data: fileDataUrl.split(\",\")[1], // Write only base64 data\n               directory: FilesystemDirectory.Data,\n               recursive: true,\n             });\n \n@@ -95,9 +95,9 @@\n         >\n           <label\n             htmlFor=\"file-upload-input\"\n             className=\"flex items-center cursor-pointer\"\n-            aria-label={translations.menuItems?.fileLabel || \"Upload a file\"} // Use fallback\n+            aria-label={translations.menuItems?.fileLabel || \"Upload a file\"}\n           >\n             {/* Icon */}\n             <icons.FileIcon\n               className=\"text-black dark:text-[color:var(--selected-dark-text)] text-xl w-8 h-8 mr-3\"\n@@ -120,9 +120,11 @@\n             type=\"file\"\n             onChange={handleFileChange}\n             id=\"file-upload-input\"\n             className=\"hidden\"\n-            aria-label={translations.accessibility?.fileUploadInput || \"Upload a file\"} // Use fallback\n+            aria-label={\n+              translations.accessibility?.fileUploadInput || \"Upload a file\"\n+            } // Use fallback\n           />\n         </div>\n       ) : (\n         <div\n@@ -142,9 +144,11 @@\n             type=\"file\"\n             onChange={handleFileChange}\n             id=\"file-upload-input\"\n             className=\"hidden\"\n-            aria-label={translations.accessibility?.fileUploadInput || \"Upload a file\"} // Use fallback\n+            aria-label={\n+              translations.accessibility?.fileUploadInput || \"Upload a file\"\n+            } // Use fallback\n           />\n         </div>\n       )}\n     </div>\n"
                },
                {
                    "date": 1732521631717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n       {/* Conditionally render content based on `menu` value */}\n       {menu ? (\n         <div\n           className=\"flex items-center p-2 rounded-lg text-black dark:text-[color:var(--selected-dark-text)] cursor-pointer hover:bg-neutral-100 dark:hover:bg-[#353333] transition duration-200\"\n-          aria-label={translations.menuItems?.fileLabel || \"Upload File\"} // Use fallback\n+          aria-label={translations.menuItems?.fileLabel || \"Upload File\"}\n         >\n           <label\n             htmlFor=\"file-upload-input\"\n             className=\"flex items-center cursor-pointer\"\n@@ -109,9 +109,9 @@\n               <h3\n                 className=\"font-medium text-neutral-900 dark:text-[color:var(--selected-dark-text)]\"\n                 aria-hidden=\"true\" // Hidden from screen readers\n               >\n-                {translations.menuItems?.fileLabel || \"Upload File\"} // Fallback\n+                {translations.menuItems?.fileLabel || \"Upload File\"}\n               </h3>\n             </div>\n           </label>\n \n"
                }
            ],
            "date": 1732521273617,
            "name": "Commit-0",
            "content": "import React from \"react\";\nimport { Plugins } from \"@capacitor/core\";\nimport { Directory, FilesystemDirectory } from \"@capacitor/filesystem\";\nimport icons from \"../../lib/remixicon-react\";\n\nconst { Filesystem } = Plugins;\n\ninterface FileUploadProps {\n  onFileUpload: (fileUrl: string, fileName: string) => void;\n  noteId: string;\n  menu?: boolean;\n  translations?: any;\n}\n\nconst FileUploadComponent: React.FC<FileUploadProps> = ({\n  onFileUpload,\n  noteId,\n  menu = false,\n  translations = {}, // Default empty object to avoid undefined errors\n}) => {\n  const handleFileChange = async (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const file = event.target.files?.[0]; // Use optional chaining\n    if (file) {\n      const { fileUrl, fileName } = await saveFileToFileSystem(file);\n      onFileUpload(fileUrl, fileName);\n    }\n  };\n\n  async function createDirectory() {\n    const directoryPath = `file-assets/${noteId}`;\n\n    try {\n      await Filesystem.mkdir({\n        path: directoryPath,\n        directory: Directory.Data,\n        recursive: true,\n      });\n    } catch (error) {\n      console.error(\"Error creating the directory:\", error);\n    }\n  }\n\n  const saveFileToFileSystem = async (\n    file: File\n  ): Promise<{ fileUrl: string; fileName: string }> => {\n    try {\n      await createDirectory();\n      const fileName = `${Date.now()}_${file.name}`;\n\n      // Read file contents as data URL\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n\n      return new Promise((resolve, reject) => {\n        fileReader.onload = async () => {\n          const fileDataUrl = fileReader.result as string;\n\n          // Write file to filesystem under \"file-assets/noteId\" directory\n          const filePath = `file-assets/${noteId}/${fileName}`;\n          try {\n            await Filesystem.writeFile({\n              path: filePath,\n              data: fileDataUrl.split(',')[1], // Write only base64 data\n              directory: FilesystemDirectory.Data,\n              recursive: true,\n            });\n\n            resolve({ fileUrl: filePath, fileName });\n          } catch (error) {\n            console.error(\"Error writing file to filesystem:\", error);\n            reject(error); // Reject promise on error\n          }\n        };\n\n        fileReader.onerror = (error) => {\n          console.error(\"Error reading file:\", error);\n          reject(error); // Reject promise on error\n        };\n      });\n    } catch (error) {\n      console.error(\"Error saving file to file system:\", error);\n      return { fileUrl: \"\", fileName: \"\" };\n    }\n  };\n\n  return (\n    <div>\n      {/* Conditionally render content based on `menu` value */}\n      {menu ? (\n        <div\n          className=\"flex items-center p-2 rounded-lg text-black dark:text-[color:var(--selected-dark-text)] cursor-pointer hover:bg-neutral-100 dark:hover:bg-[#353333] transition duration-200\"\n          aria-label={translations.menuItems?.fileLabel || \"Upload File\"} // Use fallback\n        >\n          <label\n            htmlFor=\"file-upload-input\"\n            className=\"flex items-center cursor-pointer\"\n            aria-label={translations.menuItems?.fileLabel || \"Upload a file\"} // Use fallback\n          >\n            {/* Icon */}\n            <icons.FileIcon\n              className=\"text-black dark:text-[color:var(--selected-dark-text)] text-xl w-8 h-8 mr-3\"\n              aria-hidden=\"true\"\n            />\n\n            {/* Text Container */}\n            <div className=\"flex flex-col text-left\">\n              <h3\n                className=\"font-medium text-neutral-900 dark:text-[color:var(--selected-dark-text)]\"\n                aria-hidden=\"true\" // Hidden from screen readers\n              >\n                {translations.menuItems?.fileLabel || \"Upload File\"} // Fallback\n              </h3>\n              <p className=\"text-sm text-neutral-500\" aria-hidden=\"true\"> {/* Hidden from screen readers */}\n                {translations.menuItems?.fileDescription || \"Choose a file to upload\"} // Fallback\n              </p>\n            </div>\n          </label>\n\n          {/* Hidden File Input */}\n          <input\n            type=\"file\"\n            onChange={handleFileChange}\n            id=\"file-upload-input\"\n            className=\"hidden\"\n            aria-label={translations.accessibility?.fileUploadInput || \"Upload a file\"} // Use fallback\n          />\n        </div>\n      ) : (\n        <div\n          className=\"flex items-center justify-between sm:p-2 md:p-2 p-1 rounded-md sm:text-white bg-transparent cursor-pointer text-neutral-700 dark:text-[color:var(--selected-dark-text)]\"\n          aria-label={translations.accessibility?.fileUpload || \"Upload File\"} // Use fallback\n        >\n          <label\n            htmlFor=\"file-upload-input\"\n            aria-label={translations.menuItems?.fileLabel || \"Upload File\"} // Use fallback\n          >\n            <icons.FileIcon\n              className=\"sm:text-white text-xl border-none dark:text-[color:var(--selected-dark-text)] text-xl w-8 h-8 sm:w-7 md:w-7 sm:h-7 md:h-7 cursor-pointer\"\n              aria-hidden=\"true\"\n            />\n          </label>\n          <input\n            type=\"file\"\n            onChange={handleFileChange}\n            id=\"file-upload-input\"\n            className=\"hidden\"\n            aria-label={translations.accessibility?.fileUploadInput || \"Upload a file\"} // Use fallback\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FileUploadComponent;\n"
        }
    ]
}