name: Build iOS

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-latest
    env:
      APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APPSTORE_API_KEY_ID }}
      APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APPSTORE_API_ISSUER_ID }}
      APP_STORE_CONNECT_API_KEY_CONTENT: ${{ secrets.APPSTORE_API_KEY_CONTENT }}
    name: Build iOS app

    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set up XCode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"

      - name: Install app dependencies
        run: yarn install --frozen-lockfile

      - name: Install app dependencies
        run: yarn install --frozen-lockfile

      - name: Build project
        run: yarn build

      - name: Capacitor sync
        run: npx cap sync

      - name: Build project
        run: |
          xcodebuild -workspace './ios/App/App.xcworkspace' \
          -scheme App \
          -destination generic/platform=iOS \
          -archivePath App.xcarchive \
          -allowProvisioningUpdates \
          archive

      - name: üçª Assemble IPA
        run: |
          xcodebuild -exportArchive \
          -archivePath App.xcarchive \
          -exportOptionsPlist ./archive.plist \
          -exportPath output \
          -allowProvisioningUpdates

      - name: Upload release bundle
        uses: actions/upload-artifact@v4
        with:
          name: app-ios
          path: output/
          retention-days: 60

      # For use on self-hosted runners, see
      # https://docs.github.com/en/actions/deployment/deploying-xcode-applications/installing-an-apple-certificate-on-macos-runners-for-xcode-development
      #- name: Clean up keychain and provisioning profile
      #  if: ${{ always() }}
      #  run: |
      #    security delete-keychain $RUNNER_TEMP/app-signing.keychain-db
      #    rm ~/Library/MobileDevice/Provisioning\ Profiles/build_pp.mobileprovision
